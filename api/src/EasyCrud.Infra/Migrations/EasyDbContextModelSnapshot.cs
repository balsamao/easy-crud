// <auto-generated />
using EasyCrud.Infra;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace EasyCrud.Infra.Migrations
{
    [DbContext(typeof(EasyDbContext))]
    partial class EasyDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("EasyCrud.Domain.Entities.Developer", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id")
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnName("Email")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<decimal>("HourlySalary")
                        .HasColumnName("HourlySalary")
                        .HasColumnType("decimal(9, 2)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnName("Name")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Portfolio")
                        .HasColumnName("Portfolio")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("Developers");
                });

            modelBuilder.Entity("EasyCrud.Domain.Entities.DeveloperPreference", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id")
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("DeveloperId")
                        .HasColumnName("DeveloperId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("DeveloperId")
                        .IsUnique();

                    b.ToTable("DevelopersPreferences");
                });

            modelBuilder.Entity("EasyCrud.Domain.Entities.DeveloperSkills", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id")
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AditionalInformation")
                        .HasColumnName("AditionalInformation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("DeveloperId")
                        .HasColumnName("DeveloperId")
                        .HasColumnType("bigint");

                    b.Property<string>("LinkCrud")
                        .HasColumnName("LinkCrud")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DeveloperId")
                        .IsUnique();

                    b.ToTable("DevelopersSkills");
                });

            modelBuilder.Entity("EasyCrud.Domain.Entities.Developer", b =>
                {
                    b.OwnsOne("EasyCrud.Shared.DomainObjects.Address", "Address", b1 =>
                        {
                            b1.Property<long>("DeveloperId")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("bigint")
                                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                            b1.Property<string>("City")
                                .IsRequired()
                                .HasColumnName("City")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("State")
                                .IsRequired()
                                .HasColumnName("State")
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("DeveloperId");

                            b1.ToTable("Developers");

                            b1.WithOwner()
                                .HasForeignKey("DeveloperId");
                        });

                    b.OwnsOne("EasyCrud.Shared.DomainObjects.Contact", "Contact", b1 =>
                        {
                            b1.Property<long>("DeveloperId")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("bigint")
                                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                            b1.Property<string>("Linkedin")
                                .HasColumnName("Linkedin")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("Phone")
                                .IsRequired()
                                .HasColumnName("Phone")
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("DeveloperId");

                            b1.ToTable("Developers");

                            b1.WithOwner()
                                .HasForeignKey("DeveloperId");
                        });
                });

            modelBuilder.Entity("EasyCrud.Domain.Entities.DeveloperPreference", b =>
                {
                    b.HasOne("EasyCrud.Domain.Entities.Developer", "Developer")
                        .WithOne("Preference")
                        .HasForeignKey("EasyCrud.Domain.Entities.DeveloperPreference", "DeveloperId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsOne("EasyCrud.Shared.DomainObjects.Willingness", "Willingness", b1 =>
                        {
                            b1.Property<long>("DeveloperPreferenceId")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("bigint")
                                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                            b1.Property<bool>("FourToSixHoursPerDay")
                                .HasColumnName("FourToSixHoursPerDay")
                                .HasColumnType("bit");

                            b1.Property<bool>("OnlyWeekends")
                                .HasColumnName("OnlyWeekends")
                                .HasColumnType("bit");

                            b1.Property<bool>("SixtoEightHoursPerDay")
                                .HasColumnName("sixtoEightHoursPerDay")
                                .HasColumnType("bit");

                            b1.Property<bool>("UpToEightHoursADay")
                                .HasColumnName("UpToEightHoursADay")
                                .HasColumnType("bit");

                            b1.Property<bool>("UpToFourHoursPerDay")
                                .HasColumnName("UpToFourHoursPerDay")
                                .HasColumnType("bit");

                            b1.HasKey("DeveloperPreferenceId");

                            b1.ToTable("DevelopersPreferences");

                            b1.WithOwner()
                                .HasForeignKey("DeveloperPreferenceId");
                        });

                    b.OwnsOne("EasyCrud.Shared.DomainObjects.WorkTime", "WorkTime", b1 =>
                        {
                            b1.Property<long>("DeveloperPreferenceId")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("bigint")
                                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                            b1.Property<bool>("Afternoon")
                                .HasColumnName("Afternoon")
                                .HasColumnType("bit");

                            b1.Property<bool>("Business")
                                .HasColumnName("Business")
                                .HasColumnType("bit");

                            b1.Property<bool>("Dawn")
                                .HasColumnName("Dawn")
                                .HasColumnType("bit");

                            b1.Property<bool>("Morning")
                                .HasColumnName("Morning")
                                .HasColumnType("bit");

                            b1.Property<bool>("Night")
                                .HasColumnName("Night")
                                .HasColumnType("bit");

                            b1.HasKey("DeveloperPreferenceId");

                            b1.ToTable("DevelopersPreferences");

                            b1.WithOwner()
                                .HasForeignKey("DeveloperPreferenceId");
                        });
                });

            modelBuilder.Entity("EasyCrud.Domain.Entities.DeveloperSkills", b =>
                {
                    b.HasOne("EasyCrud.Domain.Entities.Developer", "Developer")
                        .WithOne("Skills")
                        .HasForeignKey("EasyCrud.Domain.Entities.DeveloperSkills", "DeveloperId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsOne("EasyCrud.Shared.DomainObjects.Knowledge", "Knowledge", b1 =>
                        {
                            b1.Property<long>("DeveloperSkillsId")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("bigint")
                                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                            b1.Property<int>("Android")
                                .HasColumnName("Android")
                                .HasColumnType("int");

                            b1.Property<int>("Angular")
                                .HasColumnName("Angular")
                                .HasColumnType("int");

                            b1.Property<int>("AngularJs")
                                .HasColumnName("AngularJs")
                                .HasColumnType("int");

                            b1.Property<int>("AspNetMVC")
                                .HasColumnName("AspNetMVC")
                                .HasColumnType("int");

                            b1.Property<int>("AspNetWebForm")
                                .HasColumnName("AspNetWebForm")
                                .HasColumnType("int");

                            b1.Property<int>("Bootstrap")
                                .HasColumnName("Bootstrap")
                                .HasColumnType("int");

                            b1.Property<int>("C")
                                .HasColumnName("C")
                                .HasColumnType("int");

                            b1.Property<int>("CSS")
                                .HasColumnName("CSS")
                                .HasColumnType("int");

                            b1.Property<int>("Cake")
                                .HasColumnName("Cake")
                                .HasColumnType("int");

                            b1.Property<int>("Csharp")
                                .HasColumnName("Csharp")
                                .HasColumnType("int");

                            b1.Property<int>("Django")
                                .HasColumnName("Django")
                                .HasColumnType("int");

                            b1.Property<int>("ExpressNodeJs")
                                .HasColumnName("ExpressNodeJs")
                                .HasColumnType("int");

                            b1.Property<int>("Flask")
                                .HasColumnName("Flask")
                                .HasColumnType("int");

                            b1.Property<int>("Flutter")
                                .HasColumnName("Flutter")
                                .HasColumnType("int");

                            b1.Property<int>("HTML")
                                .HasColumnName("HTML")
                                .HasColumnType("int");

                            b1.Property<int>("IOS")
                                .HasColumnName("IOS")
                                .HasColumnType("int");

                            b1.Property<int>("Illustrator")
                                .HasColumnName("Illustrator")
                                .HasColumnType("int");

                            b1.Property<int>("Ionic")
                                .HasColumnName("Ionic")
                                .HasColumnType("int");

                            b1.Property<int>("Java")
                                .HasColumnName("Java")
                                .HasColumnType("int");

                            b1.Property<int>("Jquery")
                                .HasColumnName("Jquery")
                                .HasColumnType("int");

                            b1.Property<int>("Laravel")
                                .HasColumnName("Laravel")
                                .HasColumnType("int");

                            b1.Property<int>("Majento")
                                .HasColumnName("Majento")
                                .HasColumnType("int");

                            b1.Property<int>("MySQL")
                                .HasColumnName("MySQL")
                                .HasColumnType("int");

                            b1.Property<int>("MySQLServer")
                                .HasColumnName("MySQLServer")
                                .HasColumnType("int");

                            b1.Property<int>("NodeJS")
                                .HasColumnName("NodeJS")
                                .HasColumnType("int");

                            b1.Property<int>("PHP")
                                .HasColumnName("PHP")
                                .HasColumnType("int");

                            b1.Property<int>("Photoshop")
                                .HasColumnName("Photoshop")
                                .HasColumnType("int");

                            b1.Property<int>("Python")
                                .HasColumnName("Python")
                                .HasColumnType("int");

                            b1.Property<int>("ReactJS")
                                .HasColumnName("ReactJS")
                                .HasColumnType("int");

                            b1.Property<int>("ReactNative")
                                .HasColumnName("ReactNative")
                                .HasColumnType("int");

                            b1.Property<int>("Ruby")
                                .HasColumnName("Ruby")
                                .HasColumnType("int");

                            b1.Property<int>("SEO")
                                .HasColumnName("SEO")
                                .HasColumnType("int");

                            b1.Property<int>("SWIFT")
                                .HasColumnName("SWIFT")
                                .HasColumnType("int");

                            b1.Property<int>("Salesforce")
                                .HasColumnName("Salesforce")
                                .HasColumnType("int");

                            b1.Property<int>("Vue")
                                .HasColumnName("Vue")
                                .HasColumnType("int");

                            b1.Property<int>("Wordpress")
                                .HasColumnName("Wordpress")
                                .HasColumnType("int");

                            b1.HasKey("DeveloperSkillsId");

                            b1.ToTable("DevelopersSkills");

                            b1.WithOwner()
                                .HasForeignKey("DeveloperSkillsId");
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
